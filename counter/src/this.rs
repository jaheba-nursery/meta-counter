use grass::core::objects::R_BoxedValue::*;

use grass::bc::bytecode::OpCode;
use grass::bc::bytecode::BinOp::*;


pub static PROGRAM:&'static [(usize, usize, &'static [OpCode])] = &[ (0, 0, &[]),
    (0, 37, &[OpCode::ConstValue(Func(2)), OpCode::Call, OpCode::Store(0), OpCode::Skip(4), OpCode::Resume, OpCode::Load(0), OpCode::Noop, OpCode::ConstValue(Static(3)), OpCode::ConstValue(Static(4)), OpCode::Array(2), OpCode::Store(1), OpCode::ConstValue(Usize(10)), OpCode::Use, OpCode::Store(2), OpCode::ConstValue(Usize(0)), OpCode::Use, OpCode::Store(3), OpCode::Skip(1), OpCode::Load(0), OpCode::Ref, OpCode::Store(7), OpCode::Static(5), OpCode::Deref, OpCode::Ref, OpCode::Store(8), OpCode::Load(1), OpCode::Ref, OpCode::Store(11), OpCode::Load(11), OpCode::Deref, OpCode::Ref, OpCode::Store(10), OpCode::Load(10), OpCode::Unsize, OpCode::Store(9), OpCode::Load(3), OpCode::Use, OpCode::Store(12), OpCode::Load(2), OpCode::Ref, OpCode::Store(14), OpCode::Load(14), OpCode::Deref, OpCode::Ref, OpCode::Store(13), OpCode::Load(7), OpCode::Load(8), OpCode::ConstValue(Static(6)), OpCode::Load(9), OpCode::Load(12), OpCode::Load(13), OpCode::ConstValue(Func(0)), OpCode::Call, OpCode::Store(6), OpCode::Skip(1), OpCode::Load(6), OpCode::Use, OpCode::Store(3), OpCode::Load(3), OpCode::Use, OpCode::Store(17), OpCode::Load(17), OpCode::ConstValue(Usize(2)), OpCode::BinOp(Ge), OpCode::Store(16), OpCode::Load(16), OpCode::SkipIf(2), OpCode::Skip(4), OpCode::Tuple(0), OpCode::Load(0), OpCode::Noop, OpCode::Tuple(0), OpCode::Store(15), OpCode::Load(3), OpCode::Use, OpCode::Store(21), OpCode::Load(1), OpCode::Len, OpCode::Store(22), OpCode::Load(21), OpCode::Load(22), OpCode::BinOp(Lt), OpCode::Store(23), OpCode::Load(23), OpCode::ConstValue(Bool(true)), OpCode::BinOp(Eq), OpCode::SkipIf(2), OpCode::JumpBack(82), OpCode::Load(21), OpCode::Load(1), OpCode::GetIndex, OpCode::Use, OpCode::Store(20), OpCode::Load(20), OpCode::Use, OpCode::Store(4), OpCode::Load(4), OpCode::Use, OpCode::Store(26), OpCode::Load(26), OpCode::ConstValue(Static(3)), OpCode::BinOp(Eq), OpCode::Store(25), OpCode::Load(25), OpCode::SkipIf(2), OpCode::Skip(11), OpCode::Load(2), OpCode::ConstValue(Usize(1)), OpCode::CheckedBinOp(Sub), OpCode::Store(27), OpCode::Load(27), OpCode::TupleGet(1), OpCode::ConstValue(Bool(false)), OpCode::BinOp(Eq), OpCode::SkipIf(12), OpCode::JumpBack(110), OpCode::Load(4), OpCode::Use, OpCode::Store(30), OpCode::Load(30), OpCode::ConstValue(Static(4)), OpCode::BinOp(Eq), OpCode::Store(29), OpCode::Load(29), OpCode::SkipIf(17), OpCode::Skip(12), OpCode::Load(27), OpCode::TupleGet(0), OpCode::Use, OpCode::Store(2), OpCode::Tuple(0), OpCode::Store(24), OpCode::Skip(40), OpCode::ConstValue(Bool(true)), OpCode::Use, OpCode::Store(28), OpCode::Skip(15), OpCode::ConstValue(Bool(false)), OpCode::Use, OpCode::Store(28), OpCode::Skip(11), OpCode::Load(2), OpCode::Use, OpCode::Store(32), OpCode::Load(32), OpCode::ConstValue(Usize(0)), OpCode::BinOp(Gt), OpCode::Store(31), OpCode::Load(31), OpCode::JumpBackIf(16), OpCode::JumpBack(13), OpCode::Load(28), OpCode::SkipIf(2), OpCode::Skip(11), OpCode::Load(3), OpCode::ConstValue(Usize(1)), OpCode::CheckedBinOp(Sub), OpCode::Store(33), OpCode::Load(33), OpCode::TupleGet(1), OpCode::ConstValue(Bool(false)), OpCode::BinOp(Eq), OpCode::SkipIf(5), OpCode::JumpBack(158), OpCode::Tuple(0), OpCode::Store(24), OpCode::Skip(6), OpCode::Load(33), OpCode::TupleGet(0), OpCode::Use, OpCode::Store(3), OpCode::JumpBack(153), OpCode::Load(3), OpCode::ConstValue(Usize(1)), OpCode::CheckedBinOp(Add), OpCode::Store(36), OpCode::Load(36), OpCode::TupleGet(1), OpCode::ConstValue(Bool(false)), OpCode::BinOp(Eq), OpCode::SkipIf(2), OpCode::JumpBack(176), OpCode::Load(36), OpCode::TupleGet(0), OpCode::Use, OpCode::Store(3), OpCode::Tuple(0), OpCode::Store(5), OpCode::JumpBack(170), OpCode::Return]),
    (0, 0, &[]),
    (0, 0, &[OpCode::ConstValue(Usize(0)), OpCode::Use, OpCode::Skip(1), OpCode::Return]),
    (0, 0, &[OpCode::ConstValue(Usize(1)), OpCode::Use, OpCode::Skip(1), OpCode::Return]),
];
pub const IDX: (usize, usize) = (1, 58);